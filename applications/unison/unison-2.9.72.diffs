*** unison-2.9.72.orig/src/uigtk2.ml	Mon Jan 12 19:00:36 2004
--- unison-2.9.72/src/uigtk2.ml	Tue Jan 13 15:50:20 2004
***************
*** 62,85 ****
   Font preferences
   **********************************************************************)
  
! let fontMonospaceMedium =
!   if Util.osType = `Win32 then
!     lazy (Gdk.Font.load "-*-Courier New-Medium-R-Normal--*-110-*-*-*-*-*-*")
!   else
!     lazy (Gdk.Font.load "-*-Clean-Medium-R-Normal--*-130-*-*-*-*-*-*")
  
- let fontMonospaceMediumPango =
-   if Util.osType = `Win32 then
-     lazy (Pango.Font.from_string "-*-Courier New-Medium-R-Normal--*-110-*-*-*-*-*-*")
-   else
-     lazy (Pango.Font.from_string "-*-Clean-Medium-R-Normal--*-130-*-*-*-*-*-*")
- 
- let fontMonospaceBold =
-   if Util.osType = `Win32 then
-     lazy (Gdk.Font.load "-*-Courier New-Bold-R-Normal--*-110-*-*-*-*-*-*")
-   else
-     lazy (Gdk.Font.load "-*-Courier-Bold-R-Normal--*-120-*-*-*-*-*-*")
- 
  (*********************************************************************
    UI state variables
   *********************************************************************)
--- 62,70 ----
   Font preferences
   **********************************************************************)
  
! let fontMonospaceMedium = "monospace"
! let fontMonospaceBold = "monospace bold"
  
  (*********************************************************************
    UI state variables
   *********************************************************************)
***************
*** 97,103 ****
  
  let grabFocus t =
    match !currentWindow with
!     Some w -> t#set_transient_for w;
                w#misc#set_sensitive false
    | None   -> ()
  
--- 82,88 ----
  
  let grabFocus t =
    match !currentWindow with
!     Some w -> t#set_transient_for w#as_window;
                w#misc#set_sensitive false
    | None   -> ()
  
***************
*** 130,150 ****
                         USEFUL LOW-LEVEL WIDGETS
   **********************************************************************)
  
! class scrolled_text ?editable ?word_wrap ?width ?height ?packing ?show
!     () =
    let sw =
!     GBin.scrolled_window ?width ?height ?packing ~show:false
        ~hpolicy:`NEVER ~vpolicy:`AUTOMATIC ()
    in
    let text = GText.view ?editable ?wrap_mode:(Some `WORD) ~packing:sw#add () in
!   object
      inherit GObj.widget_full sw#as_widget
      method text = text
!     method insert ?(font=fontMonospaceMediumPango) s =
!       text#misc#modify_font (Lazy.force font);
!       text#buffer#set_text s;
      method show () = sw#misc#show ()
      initializer
        if show <> Some false then sw#misc#show ()
    end
  
--- 115,145 ----
                         USEFUL LOW-LEVEL WIDGETS
   **********************************************************************)
  
! class scrolled_text ?editable ?word_wrap ?(font=fontMonospaceMedium)
!     ?width ?height ?packing ?show () =
    let sw =
!     GBin.scrolled_window ?packing ~show:false
        ~hpolicy:`NEVER ~vpolicy:`AUTOMATIC ()
    in
    let text = GText.view ?editable ?wrap_mode:(Some `WORD) ~packing:sw#add () in
!   object (self)
      inherit GObj.widget_full sw#as_widget
      method text = text
!     val mutable font_tags = []
!     method insert ?(font=font) s =
!       let tag =
!         try List.assoc font font_tags
!         with Not_found ->
!           let tag = text#buffer#create_tag [`FONT font] in
!           font_tags <- (font,tag) :: font_tags;
!           tag
!       in
!       text#buffer#insert ~tags:[tag] s
! 
      method show () = sw#misc#show ()
      initializer
+       self#misc#set_size_chars ~desc:(GPango.font_description font)
+         ?width ?height ();
        if show <> Some false then sw#misc#show ()
    end
  
***************
*** 419,431 ****
    ignore (lst#append ["Reception rate"]);
    ignore (lst#append ["Data received"]);
    ignore (lst#append ["File data written"]);
!   let style = lst#misc#style#copy in
!   style#set_font (Lazy.force fontMonospaceMedium);
    for r = 0 to 2 do
      lst#set_row ~selectable:false r;
      for c = 1 to 3 do
!       lst#set_cell ~style r c
      done
    done;
  
    ignore (t#event#connect#map (fun _ ->
--- 414,427 ----
    ignore (lst#append ["Reception rate"]);
    ignore (lst#append ["Data received"]);
    ignore (lst#append ["File data written"]);
!   lst#misc#modify_font_by_name fontMonospaceMedium;
    for r = 0 to 2 do
      lst#set_row ~selectable:false r;
+     (*
      for c = 1 to 3 do
!       lst#set_cell ~style:list#misc#style#copy r c
      done
+     *)
    done;
  
    ignore (t#event#connect#map (fun _ ->
***************
*** 509,515 ****
    ignore (sel#cancel_button#connect#clicked ~callback:sel#destroy);
    ignore (sel#ok_button#connect#clicked ~callback:
              (fun () ->
!                let name = sel#get_filename in
                 sel#destroy ();
                 callback name));
    sel#show ();
--- 505,511 ----
    ignore (sel#cancel_button#connect#clicked ~callback:sel#destroy);
    ignore (sel#ok_button#connect#clicked ~callback:
              (fun () ->
!                let name = sel#filename in
                 sel#destroy ();
                 callback name));
    sel#show ();
***************
*** 957,963 ****
    fillLst "default";
    select_row !selRow;
    lst#misc#grab_focus ();
!   currentWindow := Some (t :> GWindow.window);
    ignore (t#connect#destroy ~callback:GMain.Main.quit);
    t#show ();
    GMain.Main.main ();
--- 953,959 ----
    fillLst "default";
    select_row !selRow;
    lst#misc#grab_focus ();
!   currentWindow := Some (t :> GWindow.window_skel);
    ignore (t#connect#destroy ~callback:GMain.Main.quit);
    t#show ();
    GMain.Main.main ();
***************
*** 980,990 ****
    let optionmenu =
      GMenu.option_menu ~packing:(hb#pack ~expand:true ~fill:false) () in
  
-   let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-   let charH = 16 in
    let t_text =
      new scrolled_text ~editable:false
!       ~width:(charW * 80) ~height:(charH * 20) ~packing:t#vbox#add ()
    in
    t_text#insert docstr;
  
--- 976,984 ----
    let optionmenu =
      GMenu.option_menu ~packing:(hb#pack ~expand:true ~fill:false) () in
  
    let t_text =
      new scrolled_text ~editable:false
!       ~width:80 ~height:20 ~packing:t#vbox#add ()
    in
    t_text#insert docstr;
  
***************
*** 1015,1025 ****
    let t_dismiss = GButton.button ~label ~packing:t#action_area#add () in
    t_dismiss#grab_default ();
    ignore (t_dismiss#connect#clicked ~callback:(action t));
-   let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-   let charH = 16 in
    let t_text =
      new scrolled_text ~editable:false
!       ~width:(charW * 80) ~height:(charH * 20) ~packing:t#vbox#add ()
    in
    t_text#insert (transcode message);
    ignore (t#event#connect#delete ~callback:(fun _ -> action t (); true));
--- 1009,1017 ----
    let t_dismiss = GButton.button ~label ~packing:t#action_area#add () in
    t_dismiss#grab_default ();
    ignore (t_dismiss#connect#clicked ~callback:(action t));
    let t_text =
      new scrolled_text ~editable:false
!       ~width:80 ~height:20 ~packing:t#vbox#add ()
    in
    t_text#insert (transcode message);
    ignore (t#event#connect#delete ~callback:(fun _ -> action t (); true));
***************
*** 1051,1057 ****
                GWindow.window ~kind:`TOPLEVEL ~position:`CENTER
                  ~wm_name:Uutil.myName () in
    myWindow := Some(w);
!   w#set_border_width 4;
    w
  
  (* ------ *)
--- 1043,1049 ----
                GWindow.window ~kind:`TOPLEVEL ~position:`CENTER
                  ~wm_name:Uutil.myName () in
    myWindow := Some(w);
!   w#set_border_width 0;
    w
  
  (* ------ *)
***************
*** 1168,1176 ****
      Create the details window
     *********************************************************************)
  
-   let charW = Gdk.Font.char_width (Lazy.force fontMonospaceMedium) 'M' in
-   let charH = if Util.osType = `Win32 then 20 else 16 in
- 
    let detailsWindow =
      let sw =
        GBin.scrolled_window ~packing:(toplevelVBox#pack ~expand:false)
--- 1160,1165 ----
***************
*** 1177,1187 ****
          ~hpolicy:`AUTOMATIC ~vpolicy:`AUTOMATIC () in
      GText.view ~editable:false
        ~wrap_mode:`NONE ~packing:sw#add () in
-   detailsWindow#misc#set_size_request ~height:(3 * charH) ~width: (128 * charW);
    detailsWindow#misc#set_can_focus false;
!   let style = detailsWindow#misc#style#copy in
!   style#set_font (Lazy.force fontMonospaceMedium);
!   detailsWindow#misc#set_style style;
  
    let updateButtons () =
      match !current with
--- 1166,1174 ----
          ~hpolicy:`AUTOMATIC ~vpolicy:`AUTOMATIC () in
      GText.view ~editable:false
        ~wrap_mode:`NONE ~packing:sw#add () in
    detailsWindow#misc#set_can_focus false;
!   detailsWindow#misc#modify_font_by_name fontMonospaceMedium;
!   detailsWindow#misc#set_size_chars ~height:3 ~width:96 ();
  
    let updateButtons () =
      match !current with
***************
*** 1389,1395 ****
      updateButtons () in
  
    let globalProgressBar =
!     GMisc.statusbar ~packing:(statusHBox#pack ~expand:false) () in
    let globalProgressContext = globalProgressBar#new_context ~name:"prog" in
    ignore (globalProgressContext#push "");
  
--- 1376,1382 ----
      updateButtons () in
  
    let globalProgressBar =
!     GMisc.statusbar ~width:50 ~packing:(statusHBox#pack ~expand:false) () in
    let globalProgressContext = globalProgressBar#new_context ~name:"prog" in
    ignore (globalProgressContext#push "");
  
***************
*** 2102,2108 ****
    ignore (toplevelWindow#event#connect#delete ~callback:
              (fun _ -> safeExit (); true));
    toplevelWindow#show ();
!   currentWindow := Some toplevelWindow;
    detectCmd ()
  
  
--- 2089,2095 ----
    ignore (toplevelWindow#event#connect#delete ~callback:
              (fun _ -> safeExit (); true));
    toplevelWindow#show ();
!   currentWindow := Some (toplevelWindow :> GWindow.window_skel);
    detectCmd ()
  
  
